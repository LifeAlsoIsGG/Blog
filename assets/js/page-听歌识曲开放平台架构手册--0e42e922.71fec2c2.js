(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{662:function(t,s,a){t.exports=a.p+"assets/img/acrcloud.2fda780d.jpg"},870:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"写在前面-声明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#写在前面-声明"}},[t._v("#")]),t._v(" 写在前面/声明")]),t._v(" "),e("p",[t._v("我于2021年1月入职腾讯音乐娱乐科技(深圳)有限公司，作为全栈实习生，所在部门为"),e("code",[t._v("腾讯音乐娱乐/QQ音乐业务线/基础平台部/多媒体研发中心/听歌识曲算法组")]),t._v("。入职后了解到招我是因为目前有许多其他部门需要批量调用我们的"),e("code",[t._v("识曲服务SDK")]),t._v("，有着采用脚本或者临时调用的方式繁琐，不可控，沟通成本高，无法持久化日志等等痛点，所以一直想做一个开放平台中台，通过中台去调用服务。对于需求方来说，可视化，方便，实时查看批量识曲结果，可增量；而对于我们服务提供者兼管理者而言，可以动态查看各个识曲任务调用的SDK的QPS可视化并做到随时动态控制和预警，还能根据需求方那边具体的业务分配QPS并提前扩容(申请机器)等等，最重要的是让我们和需求方的对接规范化，流程化，可监控是最重要的。甚至以后还有可能开放出去面向"),e("code",[t._v("toB")]),t._v("，将听歌识曲开放平台推广(可参考其他开放平台"),e("a",{attrs:{href:"https://www.acrcloud.com/music-recognition/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ACRCloud"),e("OutboundLink")],1),t._v(")；")]),t._v(" "),e("p",[t._v("本文章不会涉及有关开发的真实数据。")]),t._v(" "),e("h2",{attrs:{id:"需求评审-拆分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需求评审-拆分"}},[t._v("#")]),t._v(" 需求评审/拆分")]),t._v(" "),e("p",[t._v("初次接手让我一个人做的时候需求方面比较模糊，导师只是先让我给了我一个基础流程图和参考网站即"),e("a",{attrs:{href:"https://www.acrcloud.com/music-recognition/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ACRCloud"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("img",{attrs:{src:a(662),alt:"acrcloud"}})]),t._v(" "),e("p",[t._v("并要求拥有基础的用户角色体系，管理员能随时查看和控制每个用户的每个任务调用"),e("code",[t._v("识曲服务SDK")]),t._v("的QPS，并能可视化监控和预警。"),e("code",[t._v("识曲服务SDK")]),t._v("采用的是http协议，即调用接口API的方式，所以会考虑到并发等问题所以要从我们这边控制好调用的QPS。过了两个月开发功能快完成时，与大部分需求方开了个关于数据源的形式的需求讨论会，发现大部分部门还是希望能简化调用，于是我们提出可以从原来的识曲任务绑定资源库的方式改为识曲任务绑定数据库的形式，需求方提供数据库地址端口号密码等，每次增量数据库就通知识曲任务增量。但在讨论过后发现不同部门一般不会暴露数据库，要做隔离，最后敲定说我们开放API接口的方式供他们调用，进行推送任务，查询结果等，还供给我们回调接口，即每识别一批增量数据后将结果推送到他们的接口。")]),t._v(" "),e("h2",{attrs:{id:"技术栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#技术栈"}},[t._v("#")]),t._v(" 技术栈")]),t._v(" "),e("h3",{attrs:{id:"总览"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总览"}},[t._v("#")]),t._v(" 总览")]),t._v(" "),e("div",{staticClass:"custom-block info"},[e("p",{staticClass:"custom-block-title"},[t._v("技术栈总览")]),t._v(" "),e("ul",[e("li",[t._v("【前端】：Vue.js+ElementUi")]),t._v(" "),e("li",[t._v("【后端】：Springboot，SpringSecurity，Swagger，JWT(Java Web Token)，Mybatis Plus，Druid数据库连接池，EasyExcel")]),t._v(" "),e("li",[t._v("【数据库】：Mysql，Redis")]),t._v(" "),e("li",[t._v("【服务器】：Docker，Docker-compose，Nginx")]),t._v(" "),e("li",[t._v("【监控】：Grafana+Prometheus")])])]),t._v(" "),e("h3",{attrs:{id:"前端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端"}},[t._v("#")]),t._v(" 前端")]),t._v(" "),e("div",{staticClass:"custom-block info"},[e("p",{staticClass:"custom-block-title"},[t._v("技术栈")]),t._v(" "),e("p",[t._v("Vue.js+组件ElementUi")])]),t._v(" "),e("p",[t._v("为了快速开发前端，使用Vue.js搭配组件ElementUi，后面将项目打包后放到Docker部署的Nginx中，进行反向代理。开发难度基本不高。")]),t._v(" "),e("h3",{attrs:{id:"后端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后端"}},[t._v("#")]),t._v(" 后端")]),t._v(" "),e("div",{staticClass:"custom-block info"},[e("p",{staticClass:"custom-block-title"},[t._v("技术栈")]),t._v(" "),e("p",[t._v("Vue.js+组件ElementUi")])])])}),[],!1,null,null,null);s.default=r.exports}}]);