(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{857:function(t,r,e){"use strict";e.r(r);var a=e(2),_=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://golang.iswbm.com/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go编程时光"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://c.biancheng.net/golang/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go语言入门教程"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.runoob.com/go/go-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("菜鸟教程"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("blockquote",[e("p",[t._v("Go语言为并发而生。")])]),t._v(" "),e("h3",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[t._v("Go语言（或 Golang）起源于 2007 年，并在 2009 年正式对外发布。Go 是非常年轻的一门语言，它的主要目标是“兼具 "),e("a",{attrs:{href:"http://c.biancheng.net/python/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python"),e("OutboundLink")],1),t._v(" 等动态语言的开发速度和 C/"),e("a",{attrs:{href:"http://c.biancheng.net/cplus/",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++"),e("OutboundLink")],1),t._v(" 等编译型语言的性能与安全性”。")]),t._v(" "),e("p",[t._v("Go语言是编程语言设计的又一次尝试，是对类C语言的重大改进，它不但能让你访问底层操作系统，还提供了强大的网络编程和并发编程支持。Go语言的用途众多，可以进行网络编程、系统编程、并发编程、分布式编程。")]),t._v(" "),e("p",[t._v("Go语言的推出，旨在不损失应用程序性能的情况下降低代码的复杂性，具有“部署简单、并发性好、语言设计良好、执行性能好”等优势，目前国内诸多 IT 公司均已采用Go语言开发项目。")]),t._v(" "),e("p",[t._v("Go语言有时候被描述为“C 类似语言”，或者是“21 世纪的C语言”。Go 从C语言继承了相似的表达式语法、控制流结构、基础数据类型、调用参数传值、指针等很多思想，还有C语言一直所看中的编译后机器码的运行效率以及和现有操作系统的无缝适配。")]),t._v(" "),e("p",[t._v("因为Go语言没有类和继承的概念，所以它和 "),e("a",{attrs:{href:"http://c.biancheng.net/java/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java"),e("OutboundLink")],1),t._v(" 或 C++ 看起来并不相同。但是它通过接口（interface）的概念来实现多态性。Go语言有一个清晰易懂的轻量级类型系统，在类型之间也没有层级之说。因此可以说Go语言是一门混合型的语言。")]),t._v(" "),e("p",[t._v("此外，很多重要的开源项目都是使用Go语言开发的，其中包括 "),e("a",{attrs:{href:"http://c.biancheng.net/docker/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker"),e("OutboundLink")],1),t._v("、Go-Ethereum、Thrraform 和 Kubernetes。")]),t._v(" "),e("h3",{attrs:{id:"用途"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用途"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),e("p",[t._v("Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。")]),t._v(" "),e("p",[t._v("对于高性能分布式系统领域而言，Go 语言无疑比大多数其它语言有着更高的开发效率。它提供了海量并行的支持，这对于游戏服务端的开发而言是再好不过了。")]),t._v(" "),e("h3",{attrs:{id:"特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),e("ul",[e("li",[t._v("自动垃圾回收")]),t._v(" "),e("li",[t._v("更丰富的内置类型")]),t._v(" "),e("li",[t._v("函数多返回值")]),t._v(" "),e("li",[t._v("错误处理")]),t._v(" "),e("li",[t._v("匿名函数和闭包")]),t._v(" "),e("li",[t._v("类型和接口")]),t._v(" "),e("li",[t._v("并发编程")]),t._v(" "),e("li",[t._v("反射")]),t._v(" "),e("li",[t._v("语言交互性")])]),t._v(" "),e("h2",{attrs:{id:"安装与使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装与使用"}},[t._v("#")]),t._v(" 安装与使用")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://golang.iswbm.com/en/latest/c01/c01_01.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文搞定开发环境的搭建"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"go命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#go命令"}},[t._v("#")]),t._v(" Go命令")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/itogo/p/8645441.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/itogo/p/8645441.html"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"目录结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),e("p",[t._v("一个Go语言项目的目录一般包含以下三个子目录：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("目录")]),t._v(" "),e("th",[t._v("解释")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("src")]),t._v(" "),e("td",[t._v("放置项目和库的源文件")])]),t._v(" "),e("tr",[e("td",[t._v("pkg")]),t._v(" "),e("td",[t._v("放置编译后生成的包/库的归档文件")])]),t._v(" "),e("tr",[e("td",[t._v("bin")]),t._v(" "),e("td",[t._v("放置编译后生成的可执行文件")])])])]),t._v(" "),e("h3",{attrs:{id:"src"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#src"}},[t._v("#")]),t._v(" src")]),t._v(" "),e("p",[t._v("用于以包（package）的形式组织并存放 Go 源文件，这里的包与 src 下的每个子目录是一一对应。例如，若一个源文件被声明属于 log 包，那么它就应当保存在 src/log 目录中。")]),t._v(" "),e("p",[t._v("并不是说 src 目录下不能存放 Go 源文件，一般在测试或演示的时候也可以把 Go 源文件直接放在 src 目录下，但是这么做的话就只能声明该源文件属于 main 包了。正常开发中还是建议大家把 Go 源文件放入特定的目录中。")]),t._v(" "),e("p",[t._v("包是Go语言管理代码的重要机制，其作用类似于"),e("a",{attrs:{href:"http://c.biancheng.net/java/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java"),e("OutboundLink")],1),t._v("中的 package 和 C/"),e("a",{attrs:{href:"http://c.biancheng.net/cplus/",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++"),e("OutboundLink")],1),t._v(" 的头文件。Go 源文件中第一段有效代码必须是"),e("code",[t._v("package <包名>")]),t._v("的形式，如 package hello。")]),t._v(" "),e("p",[t._v("另外需要注意的是，Go语言会把通过"),e("code",[t._v("go get")]),t._v("命令获取到的库源文件下载到 src 目录下对应的文件夹当中。")]),t._v(" "),e("h3",{attrs:{id:"pkg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pkg"}},[t._v("#")]),t._v(" pkg")]),t._v(" "),e("p",[t._v("用于存放通过"),e("code",[t._v("go install")]),t._v("命令安装某个包后的归档文件。归档文件是指那些名称以“.a”结尾的文件。")]),t._v(" "),e("p",[t._v("该目录与 GOROOT 目录（也就是Go语言的安装目录）下的 pkg 目录功能类似，区别在于这里的 pkg 目录专门用来存放项目代码的归档文件。")]),t._v(" "),e("p",[t._v("编译和安装项目代码的过程一般会以代码包为单位进行，比如 log 包被编译安装后，将生成一个名为 log.a 的归档文件，并存放在当前项目的 pkg 目录下。")]),t._v(" "),e("h3",{attrs:{id:"bin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bin"}},[t._v("#")]),t._v(" bin")]),t._v(" "),e("p",[t._v("与 pkg 目录类似，在通过"),e("code",[t._v("go install")]),t._v("命令完成安装后，保存由 Go 命令源文件生成的可执行文件。在类 Unix 操作系统下，这个可执行文件的名称与命令源文件的文件名相同。而在 Windows 操作系统下，这个可执行文件的名称则是命令源文件的文件名加 .exe 后缀。")])])}),[],!1,null,null,null);r.default=_.exports}}]);