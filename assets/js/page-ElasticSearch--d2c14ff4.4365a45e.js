(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{830:function(t,a,s){"use strict";s.r(a);var r=s(2),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[t._v("::: tips 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.bilibili.com/video/BV1hh411D7sb?from=search&seid=13278230873440832054",target:"_blank",rel:"noopener noreferrer"}},[t._v("尚硅谷视频"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/u011863024/article/details/115721328",target:"_blank",rel:"noopener noreferrer"}},[t._v("尚硅谷笔记"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v(":::")]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("官网："),s("a",{attrs:{href:"https://www.elastic.co/cn/elasticsearch/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.elastic.co/cn/elasticsearch/"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"学习路线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习路线"}},[t._v("#")]),t._v(" 学习路线")]),t._v(" "),s("ul",[s("li",[t._v("第1章 Elasticsearch概述")]),t._v(" "),s("li",[t._v("第2章 Elasticsearch入门")]),t._v(" "),s("li",[t._v("第3章 Elasticsearch环境")]),t._v(" "),s("li",[t._v("第4章 Elasticsearch进阶")]),t._v(" "),s("li",[t._v("第5章 Elasticsearch集成")]),t._v(" "),s("li",[t._v("第6章 Elasticsearch优化")]),t._v(" "),s("li",[t._v("第7章 Elasticsearch面试题")])]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("Elaticsearch，简称为 ES， ES 是一个"),s("strong",[t._v("开源的高扩展的分布式全文搜索引擎")]),t._v("， 是整个 ElasticStack 技术栈的核心。")]),t._v(" "),s("h2",{attrs:{id:"部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),s("p",[t._v("Windows 版的 Elasticsearch 压缩包，解压即安装完毕，解压后的 Elasticsearch 的目录结构如下 ：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("目录")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("bin")]),t._v(" "),s("td",[t._v("可执行脚本目录")])]),t._v(" "),s("tr",[s("td",[t._v("config")]),t._v(" "),s("td",[t._v("配置目录")])]),t._v(" "),s("tr",[s("td",[t._v("jdk")]),t._v(" "),s("td",[t._v("内置 JDK 目录")])]),t._v(" "),s("tr",[s("td",[t._v("lib")]),t._v(" "),s("td",[t._v("类库")])]),t._v(" "),s("tr",[s("td",[t._v("logs")]),t._v(" "),s("td",[t._v("日志目录")])]),t._v(" "),s("tr",[s("td",[t._v("modules")]),t._v(" "),s("td",[t._v("模块目录")])]),t._v(" "),s("tr",[s("td",[t._v("plugins")]),t._v(" "),s("td",[t._v("插件目录")])])])]),t._v(" "),s("p",[t._v("解压后，进入 bin 文件目录，点击 elasticsearch.bat 文件启动 ES 服务 。")]),t._v(" "),s("p",[t._v("注意： 9300 端口为 Elasticsearch 集群间组件的通信端口， 9200 端口为浏览器访问的 http协议 RESTful 端口。")]),t._v(" "),s("p",[t._v("打开浏览器，输入地址： http://localhost:9200，测试返回结果，返回结果如下：")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DESKTOP-LNJQ0VF"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cluster_name"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elasticsearch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cluster_uuid"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nCZqBhfdT1-pw8Yas4QU9w"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"number"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7.8.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_flavor"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_type"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zip"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_hash"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"757314695644ea9a1dc2fecd26d1a43856725e65"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_date"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-06-14T19:35:50.234439Z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build_snapshot"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lucene_version"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8.5.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minimum_wire_compatibility_version"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6.8.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"minimum_index_compatibility_version"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6.0.0-beta1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tagline"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You Know, for Search"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("h2",{attrs:{id:"倒排索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引"}},[t._v("#")]),t._v(" 倒排索引")]),t._v(" "),s("p",[t._v("正排索引（传统）")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("id")]),t._v(" "),s("th",[t._v("content")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1001")]),t._v(" "),s("td",[t._v("my name is zhang san")])]),t._v(" "),s("tr",[s("td",[t._v("1002")]),t._v(" "),s("td",[t._v("my name is li si")])])])]),t._v(" "),s("p",[t._v("倒排索引")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("keyword")]),t._v(" "),s("th",[t._v("id")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("name")]),t._v(" "),s("td",[t._v("1001, 1002")])]),t._v(" "),s("tr",[s("td",[t._v("zhang")]),t._v(" "),s("td",[t._v("1001")])])])]),t._v(" "),s("p",[t._v("Elasticsearch 是"),s("strong",[t._v("面向文档型数据库")]),t._v("，一条数据在这里就是一个文档。 为了方便大家理解，我们将 Elasticsearch 里存储文档数据和关系型数据库 MySQL 存储数据的概念进行一个类比")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/146a779da01f53e7f7a8d53132d3c7cf.png",alt:""}})]),t._v(" "),s("p",[t._v("ES 里的 Index 可以看做一个库，而 Types 相当于表， Documents 则相当于表的行。这里 Types 的概念已经被逐渐弱化， Elasticsearch 6.X 中，一个 index 下已经只能包含一个type， Elasticsearch 7.X 中, Type 的概念已经被删除了。")]),t._v(" "),s("h2",{attrs:{id:"elasticsearch对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch对象"}},[t._v("#")]),t._v(" ElasticSearch对象")]),t._v(" "),s("h3",{attrs:{id:"索引-index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引-index"}},[t._v("#")]),t._v(" 索引（index）")]),t._v(" "),s("p",[t._v("​\t一个索引就是一个拥有几分相似特征的文档的集合。比如说，你可以有一个客户数据的索引，另一个产品目录的索引，还有一个订单数据的索引。一个索引由一个名字来标识（必须全部是小写字母），并且当我们要对这个索引中的文档进行索引、搜索、更新和删除（CRUD）的时候，都要使用到这个名字。在一个集群中，可以定义任意多的索引。")]),t._v(" "),s("p",[t._v("能搜索的数据必须索引，这样的好处是可以提高查询速度，比如：新华字典前面的目录就是索引的意思，目录可以提高查询速度。")]),t._v(" "),s("h3",{attrs:{id:"类型-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型-type"}},[t._v("#")]),t._v(" 类型（type）")]),t._v(" "),s("p",[t._v("在一个索引中，你可以定义一种或多种类型。")]),t._v(" "),s("p",[t._v("一个类型是你的索引的一个逻辑上的分类/分区，其语义完全由你来定。通常，会为具有一组共同字段的文档定义一个类型。不同的版本，类型发生了不同的变化。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("版本")]),t._v(" "),s("th",[t._v("Type")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("5.x")]),t._v(" "),s("td",[t._v("支持多种 type")])]),t._v(" "),s("tr",[s("td",[t._v("6.x")]),t._v(" "),s("td",[t._v("只能有一种 type")])]),t._v(" "),s("tr",[s("td",[t._v("7.x")]),t._v(" "),s("td",[t._v("默认不再支持自定义索引类型（默认类型为： _doc）")])])])]),t._v(" "),s("h3",{attrs:{id:"文档-document"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档-document"}},[t._v("#")]),t._v(" 文档（Document）")]),t._v(" "),s("p",[t._v("一个文档是一个可被索引的基础信息单元，也就是一条数据。")]),t._v(" "),s("p",[t._v("比如：你可以拥有某一个客户的文档，某一个产品的一个文档，当然，也可以拥有某个订单的一个文档。文档以 JSON（Javascript Object Notation）格式来表示，而 JSON 是一个到处存在的互联网数据交互格式。")]),t._v(" "),s("p",[t._v("在一个 "),s("code",[t._v("index/type")]),t._v(" 里面，你可以存储任意多的文档。")]),t._v(" "),s("h3",{attrs:{id:"字段-field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段-field"}},[t._v("#")]),t._v(" 字段（Field）")]),t._v(" "),s("p",[t._v("相当于是数据表的字段，对文档数据根据不同属性进行的分类标识。")]),t._v(" "),s("h3",{attrs:{id:"映射-mapping"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#映射-mapping"}},[t._v("#")]),t._v(" 映射（Mapping）")]),t._v(" "),s("p",[t._v("mapping 是处理数据的方式和规则方面做一些限制，如：某个字段的数据类型、默认值、分析器、是否被索引等等。这些都是映射里面可以设置的，其它就是处理 ES 里面数据的一些使用规则设置也叫做映射，按着最优规则处理数据对性能提高很大，因此才需要建立映射，并且需要思考如何建立映射才能对性能更好。")]),t._v(" "),s("h3",{attrs:{id:"分片-shards"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分片-shards"}},[t._v("#")]),t._v(" 分片（Shards）")]),t._v(" "),s("p",[t._v("​\t一个索引可以存储超出单个节点硬件限制的大量数据。比如，一个具有 10 亿文档数据的索引占据 1TB 的磁盘空间，而任一节点都可能没有这样大的磁盘空间。 或者单个节点处理搜索请求，响应太慢。为了解决这个问题，**Elasticsearch 提供了将索引划分成多份的能力，每一份就称之为分片。**当你创建一个索引的时候，你可以指定你想要的分片的数量。每个分片本身也是一个功能完善并且独立的“索引”，这个“索引”可以被放置到集群中的任何节点上。")]),t._v(" "),s("p",[t._v("分片很重要，主要有两方面的原因：")]),t._v(" "),s("div",{staticClass:"custom-block info"},[s("p",{staticClass:"custom-block-title"},[t._v("相关信息")]),t._v(" "),s("ul",[s("li",[t._v("允许你水平分割 / 扩展你的内容容量。")]),t._v(" "),s("li",[t._v("允许你在分片之上进行分布式的、并行的操作，进而提高性能/吞吐量。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("至于一个分片怎样分布，它的文档怎样聚合和搜索请求，是完全由 Elasticsearch 管理的，对于作为用户的你来说，这些都是透明的，无需过分关心。")])]),t._v(" "),s("p",[t._v("被混淆的概念是，一个 "),s("code",[t._v("Lucene")]),t._v(" 索引 我们在 Elasticsearch 称作 "),s("code",[t._v("分片")]),t._v(" 。 一个Elasticsearch 索引 是分片的集合。 当 Elasticsearch 在索引中搜索的时候， 他发送查询到每一个属于索引的分片（Lucene 索引），然后合并每个分片的结果到一个全局的结果集。")]),t._v(" "),s("p",[t._v("Lucene 是 Apache 软件基金会 Jakarta 项目组的一个子项目，提供了一个简单却强大的应用程式接口，能够做"),s("code",[t._v("全文索引和搜寻")]),t._v("。在 Java 开发环境里 Lucene 是一个成熟的免费开源工具。就其本身而言， Lucene 是当前以及最近几年最受欢迎的免费 Java 信息检索程序库。但 Lucene 只是一个"),s("code",[t._v("提供全文搜索功能类库的核心工具包")]),t._v("，而真正使用它还需要一个完善的服务框架搭建起来进行应用。")]),t._v(" "),s("p",[t._v("目前市面上流行的搜索引擎软件，主流的就两款： Elasticsearch 和 Solr,这两款都是基于 Lucene 搭建的，可以独立部署启动的搜索引擎服务软件。由于内核相同，所以两者除了服务器安装、部署、管理、集群以外，对于数据的操作 修改、添加、保存、查询等等都十分类似。")]),t._v(" "),s("h3",{attrs:{id:"副本-replicas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#副本-replicas"}},[t._v("#")]),t._v(" 副本（Replicas）")]),t._v(" "),s("p",[t._v("在一个网络 / 云的环境里，失败随时都可能发生，在某个分片/节点不知怎么的就处于离线状态，或者由于任何原因消失了，这种情况下，有一个"),s("code",[t._v("故障转移机制")]),t._v("是非常有用并且是强烈推荐的。为此目的， Elasticsearch 允许你创建分片的一份或多份拷贝，这些拷贝叫做"),s("code",[t._v("复制分片(副本)")]),t._v("。")]),t._v(" "),s("p",[t._v("复制分片之所以重要，有两个主要原因：")]),t._v(" "),s("div",{staticClass:"custom-block info"},[s("p",{staticClass:"custom-block-title"},[t._v("相关信息")]),t._v(" "),s("ul",[s("li",[t._v("在分片/节点失败的情况下，提供了高可用性。因为这个原因，注意到复制分片从不与原/主要（original/primary）分片置于同一节点上是非常重要的。")]),t._v(" "),s("li",[t._v("扩展你的搜索量/吞吐量，因为搜索可以在所有的副本上并行运行。")])])]),t._v(" "),s("p",[t._v("总之，每个索引可以被分成多个分片。一个索引也可以被复制 0 次（意思是没有复制）或多次。一旦复制了，每个索引就有了主分片（作为复制源的原来的分片）和复制分片（主分片的拷贝）之别。")]),t._v(" "),s("p",[t._v("分片和复制的数量可以在索引创建的时候指定。在索引创建之后，你可以在任何时候动态地改变"),s("code",[t._v("复制(副本)")]),t._v("的数量，但是你事后不能改变分片的数量。")]),t._v(" "),s("p",[t._v("默认情况下，Elasticsearch 中的每个索引被分片 1 个主分片和 1 个复制，这意味着，如果你的集群中至少有两个节点，你的索引将会有 1 个主分片和另外 1 个复制分片（1 个完全拷贝），这样的话每个索引总共就有 2 个分片， 我们需要根据索引需要确定分片个数。")]),t._v(" "),s("h3",{attrs:{id:"分配-allocation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分配-allocation"}},[t._v("#")]),t._v(" 分配（Allocation）")]),t._v(" "),s("p",[t._v("将分片分配给某个节点的过程，包括分配主分片或者副本。如果是副本，还包含从主分片复制数据的过程。这个过程是由 master 节点完成的。")]),t._v(" "),s("h2",{attrs:{id:"操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),s("h3",{attrs:{id:"http操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http操作"}},[t._v("#")]),t._v(" HTTP操作")]),t._v(" "),s("p",[t._v("参考笔记")]),t._v(" "),s("h3",{attrs:{id:"java-api操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-api操作"}},[t._v("#")]),t._v(" Java API操作")]),t._v(" "),s("p",[t._v("参考笔记")]),t._v(" "),s("h3",{attrs:{id:"集群搭建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集群搭建"}},[t._v("#")]),t._v(" 集群搭建")]),t._v(" "),s("p",[t._v("参考笔记")])])}),[],!1,null,null,null);a.default=e.exports}}]);