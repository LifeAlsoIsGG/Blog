(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{592:function(s,a,t){s.exports=t.p+"assets/img/Jvm_function.4f7d5d3d.jpg"},872:function(s,a,t){"use strict";t.r(a);var n=t(2),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"jvm概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm概述"}},[s._v("#")]),s._v(" JVM概述")]),s._v(" "),n("h3",{attrs:{id:"jvm跨平台原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm跨平台原理"}},[s._v("#")]),s._v(" JVM跨平台原理")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("跨平台：由Java编写的程序可以在不同的操作系统上运行：一次编写，多处运行")])]),s._v(" "),n("li",[n("p",[s._v("原理：编译之后的字节码文件和平台无关，需要在不同的操作系统上安装一个对应版本的虚拟机(JVM)\n(Java虚拟机不和包括java在内的任何语言绑定，它只与class文件这种二进制文件格式所关联。无论使用何种语言进行软件开发，只要将源文件编译为正确的Class文件，那么这种语言就可以在Java虚拟机上执行，可以说，统一而强大的Class文件结构，就是Java虚拟机的基石、桥梁)")])])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201004103315879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RaODQ1MTk1NDg1,size_16,color_FFFFFF,t_70#pic_center",alt:""}})]),s._v(" "),n("h3",{attrs:{id:"jvm位置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm位置"}},[s._v("#")]),s._v(" JVM位置")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec702fcca6b37?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),n("h3",{attrs:{id:"jvm运行流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm运行流程"}},[s._v("#")]),s._v(" JVM运行流程")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec7cd31581d15?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),n("h3",{attrs:{id:"jvm生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jvm生命周期"}},[s._v("#")]),s._v(" JVM生命周期")]),s._v(" "),n("h4",{attrs:{id:"_1-启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-启动"}},[s._v("#")]),s._v(" 1.启动")]),s._v(" "),n("p",[s._v("通过引导类加载器（bootstrap class loader）创建一个初始类（initial class）来完成的，这个类是由虚拟机的具体实现指定的.")]),s._v(" "),n("h4",{attrs:{id:"_2-执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-执行"}},[s._v("#")]),s._v(" 2.执行")]),s._v(" "),n("ul",[n("li",[s._v("一个运行中的java虚拟机有着一个清晰的任务：执行Java程序；")]),s._v(" "),n("li",[s._v("程序开始执行的时候他才运行，程序结束时他就停止；")]),s._v(" "),n("li",[s._v("执行一个所谓的Java程序的时候，真真正正在执行的是一个叫做Java虚拟机的进程。")])]),s._v(" "),n("h4",{attrs:{id:"_3-退出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-退出"}},[s._v("#")]),s._v(" 3.退出")]),s._v(" "),n("ul",[n("li",[s._v("程序正常执行结束")]),s._v(" "),n("li",[s._v("程序异常或错误而异常终止")]),s._v(" "),n("li",[s._v("操作系统错误导致终止")]),s._v(" "),n("li",[s._v("某线程调用Runtime类或System类的exit方法，或Runtime类的halt方法，并且java安全管理器也允许这次exit或halt操作")]),s._v(" "),n("li",[s._v("除此之外，JNI规范描述了用JNI Invocation API来加载或卸载Java虚拟机时，Java虚拟机的退出情况")])]),s._v(" "),n("h2",{attrs:{id:"类加载子系统"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载子系统"}},[s._v("#")]),s._v(" 类加载子系统")]),s._v(" "),n("p",[n("img",{attrs:{src:t(592),alt:""}})]),s._v(" "),n("h3",{attrs:{id:"作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[s._v("#")]),s._v(" 作用")]),s._v(" "),n("ul",[n("li",[s._v("类加载子系统负责从文件系统或者网络中加载Class文件，class文件在文件开头有特定的文件标识；")]),s._v(" "),n("li",[n("code",[s._v("ClassLoader")]),s._v("只负责class文件的加载，至于它是否可以运行，则由``Execution Engine`决定")]),s._v(" "),n("li",[s._v("加载的类信息存放于一块成为方法区的内存空间。除了类信息之外，方法区还会存放运行时常量池信息，可能还包括字符串字面量和数字常量（这部分常量信息是Class文件中常量池部分的内存映射）")])]),s._v(" "),n("h3",{attrs:{id:"加载过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加载过程"}},[s._v("#")]),s._v(" 加载过程")]),s._v(" "),n("p",[s._v("当程序要使用某个类时，如果该类还未被加载到内存中，则系统会通过")]),s._v(" "),n("div",{staticClass:"custom-block info"},[n("p",{staticClass:"custom-block-title"},[s._v("相关信息")]),s._v(" "),n("ul",[n("li",[s._v("类的加载")]),s._v(" "),n("li",[s._v("类的链接（验证，准备，解析）")]),s._v(" "),n("li",[s._v("类的初始化")])])]),s._v(" "),n("p",[s._v("这三个步骤来对类进行初始化。如果不出现意外，JVM将会连续完成这三个步骤，所以有时也把这三个步骤统称为类加载或者初始化")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec7daeca85a52?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"类加载过程"}})]),s._v(" "),n("h4",{attrs:{id:"加载-loading"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加载-loading"}},[s._v("#")]),s._v(" 加载（Loading）")]),s._v(" "),n("p",[s._v("由"),n("code",[s._v("ClassLoader")]),s._v("负责")]),s._v(" "),n("ul",[n("li",[s._v("通过一个类的全限定明获取定义此类的二进制字节流；")]),s._v(" "),n("li",[s._v("将这个字节流所代表的的"),n("code",[s._v("静态存储结构")]),s._v("转化为"),n("code",[s._v("方法区的运行时数据")]),s._v("；")]),s._v(" "),n("li",[s._v("在内存中生成一个对应这个类的"),n("code",[s._v("java.lang.Class")]),s._v("对象，作为方法区这个类的各种数据的访问入口")])]),s._v(" "),n("h4",{attrs:{id:"链接-linking"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#链接-linking"}},[s._v("#")]),s._v(" 链接（Linking）")]),s._v(" "),n("p",[s._v("包含验证，准备，解析")]),s._v(" "),n("p",[n("strong",[s._v("验证")])]),s._v(" "),n("div",{staticClass:"custom-block info"},[n("p",{staticClass:"custom-block-title"},[s._v("相关信息")]),s._v(" "),n("ul",[n("li",[s._v("目的在于确保Class文件的字节流中包含信息符合当前虚拟机要求，保证被加载类的正确性，不会危害虚拟机自身安全。")]),s._v(" "),n("li",[s._v("主要包括四种验证，文件格式验证，源数据验证，字节码验证，符号引用验证。")])])]),s._v(" "),n("p",[n("strong",[s._v("准备")])]),s._v(" "),n("p",[s._v("为类变量分配内存并且设置该类变量的默认初始化值")]),s._v(" "),n("div",{staticClass:"custom-block info"},[n("p",{staticClass:"custom-block-title"},[s._v("相关信息")]),s._v(" "),n("ul",[n("li",[s._v("这里不包含用"),n("code",[s._v("final")]),s._v("修饰的"),n("code",[s._v("static")]),s._v("，因为final在编译的时候就会分配了，准备阶段会显式初始化；")]),s._v(" "),n("li",[s._v("这里不会为实例变量分配初始化,类变量会分配在方法区中,而实例变量会随着对象一起分配到Java堆中")])])]),s._v(" "),n("p",[n("strong",[s._v("解析")])]),s._v(" "),n("p",[s._v("将常量池内的"),n("code",[s._v("符号引用")]),s._v("转换为"),n("code",[s._v("直接引用")]),s._v("的过程。")]),s._v(" "),n("div",{staticClass:"custom-block info"},[n("p",{staticClass:"custom-block-title"},[s._v("相关信息")]),s._v(" "),n("ul",[n("li"),s._v(" "),n("li",[s._v("事实上，解析操作网晚会伴随着jvm在执行完初始化之后再执行")]),s._v(" "),n("li",[s._v("符号引用就是一组符号来描述所引用的目标。符号应用的字面量形式明确定义在《java虚拟机规范》的class文件格式中。直接引用就是直接指向目标的指针、相对偏移量或一个间接定位到目标的句柄")]),s._v(" "),n("li",[s._v("解析动作主要针对类或接口、字段、类方法、接口方法、方法类型等。对应常量池中的CONSTANT_Class_info/CONSTANT_Fieldref_info、CONSTANT_Methodref_info等。")])])]),s._v(" "),n("ul",[n("li",[s._v("虚拟机在加载Class文件时才会进行动态链接,也就是说,Class文件中不会保存各个方法和字段的最终内存布局信息,因此,这些字段和方法的符号引用不经过转换是无法直接被虚拟机使用的。当虚拟机运行起来时,需要从常量池中获得对应的符号引用,再在类加载过程中(初始化阶段)将其替换直接引用,并翻译到具体的内存地址中")]),s._v(" "),n("li",[s._v("符号引用：符号引用以一组符号来描述所引用的目标，符号可以是任何形式的字面量，只要使用时能无歧义地定位到目标即可。符号引用与虚拟机实现的内存布局无关，引用的目标并不一定已经加载到了内存中")]),s._v(" "),n("li",[s._v("直接引用：直接引用可以是直接指向目标的指针、相对偏移量或是一个能间接定位到目标的句柄。直接引用是与虚拟机实现的内存布局相关的，同一个符号引用在不同虚拟机实例上翻译出来的直接引用一般不会相同。如果有了直接引用，那说明引用的目标必定已经存在于内存之中了。")])]),s._v(" "),n("p",[s._v("解释什么是符号引号和直接引用?\n教室里有个空的位子没坐人，座位上边牌子写着小明的座位（符号引用），后来小明进来坐下去掉牌子（符号引用换成直接引用）")]),s._v(" "),n("h4",{attrs:{id:"初始化-initialization"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化-initialization"}},[s._v("#")]),s._v(" 初始化（Initialization）")]),s._v(" "),n("p",[s._v("为类变量赋予正确的初始化值")]),s._v(" "),n("div",{staticClass:"custom-block info"},[n("p",{staticClass:"custom-block-title"},[s._v("相关信息")]),s._v(" "),n("ul",[n("li",[s._v("初始化阶段就是执行类构造器方法"),n("code",[s._v("< clinit >()")]),s._v("的过程。此方法不需要定义，是javac编译器自动收集"),n("code",[s._v("类中的所有类变量的赋值动作")]),s._v("和"),n("code",[s._v("静态代码快")]),s._v("中的语句合并而来（如果没有则不回生成clinit方法）")]),s._v(" "),n("li",[s._v("若该类具有父类，jvm会保证子类的clinit()执行前，父类的clinit()已经执行完毕")]),s._v(" "),n("li",[s._v("clinit()不同于类的构造器。（关联：构造器是虚拟机视角下的方法init()）")]),s._v(" "),n("li",[s._v("虚拟机必须保证一个类的clinit()方法在多线程下被同步加锁。")])])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassInitTest")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        num"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        number"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//System.out.println(number); 报错:非法的前向引用，只能赋值不能调用")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Linking之prepare: number=0 --\x3einitial:20--\x3e10")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" number"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassInitTest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassInitTest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("number"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[n("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210426221549496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RaODQ1MTk1NDg1,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),n("p",[s._v("虚拟机必须保证一个类的clinit()方法在多线程下被同步加锁。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec8415e75466b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),n("h2",{attrs:{id:"类加载器-classloader"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类加载器-classloader"}},[s._v("#")]),s._v(" 类加载器（ClassLoader）")]),s._v(" "),n("p",[s._v("::: tips 参考")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.cnblogs.com/makai/p/11081879.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("老大难的 Java ClassLoader，到了该彻底理解它的时候了"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://blog.csdn.net/briblue/article/details/54973413",target:"_blank",rel:"noopener noreferrer"}},[s._v("一看你就懂，超详细java中的ClassLoader详解"),n("OutboundLink")],1)])]),s._v(" "),n("p",[s._v(":::")]),s._v(" "),n("h3",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),n("p",[s._v("JVM支持两种类型的加载器，分别为")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("引导类加载器（BootStrap ClassLoader）")])]),s._v(" "),n("li",[n("strong",[s._v("自定义类加载器（User-Defined ClassLoader）")])])]),s._v(" "),n("p",[s._v("从概念上来讲，自定义类加载器一般指的是程序中由开发人员自定义的一类类加载器，但是java虚拟机规范却没有这么定义，而是"),n("strong",[s._v("将所有派生于抽象类ClassLoader的类加载器都划分为自定义类加载器")])]),s._v(" "),n("p",[s._v("sum.misc.Launcher:它是一个java虚拟机的入口应用")]),s._v(" "),n("p",[s._v("无论类加载器的类型如何划分，在程序中我们最常见的类加载器始终只有三个，如下所示：")]),s._v(" "),n("p",[n("strong",[s._v("①启动类加载器（引导类加载器，BootStrap ClassLoader）")])]),s._v(" "),n("ul",[n("li",[s._v("这个类加载使用"),n("strong",[s._v("C/C++语言实现的")]),s._v("，嵌套在JVM内部")]),s._v(" "),n("li",[s._v("它用来加载java的核心库（JAVA_HOME/jre/lib/rt.jar/resources.jar或sun.boot.class.path路径下的内容），用于提供JVM自身需要的类")]),s._v(" "),n("li",[s._v("并不继承自java.lang.ClassLoader,没有父加载器")]),s._v(" "),n("li",[s._v("加载拓展类和应用程序类加载器，并指定为他们的父加载器")]),s._v(" "),n("li",[s._v("处于安全考虑，BootStrap启动类加载器只加载包名为java、javax、sun等开头的类")])]),s._v(" "),n("p",[n("strong",[s._v("②拓展类加载器（Extension ClassLoader）")])]),s._v(" "),n("ul",[n("li",[s._v("java语言编写 ，由sun.misc.Launcher$ExtClassLoader实现。")]),s._v(" "),n("li",[s._v("派生于ClassLoader类")]),s._v(" "),n("li",[s._v("父类加载器为启动类加载器")]),s._v(" "),n("li",[s._v("从java.ext.dirs系统属性所指定的目录中加载类库，或从JDK的安装目录的jre/lib/ext子目录（扩展目录）下加载类库。"),n("strong",[s._v("如果用户创建的JAR放在此目录下，也会由拓展类加载器自动加载")])])]),s._v(" "),n("p",[n("strong",[s._v("③应用程序类加载器（系统类加载器，AppClassLoader）")])]),s._v(" "),n("ul",[n("li",[s._v("java语言编写， 由sun.misc.Launcher$AppClassLoader实现。")]),s._v(" "),n("li",[s._v("派生于ClassLoader类")]),s._v(" "),n("li",[s._v("父类加载器为拓展类加载器")]),s._v(" "),n("li",[s._v("它负责加载环境变量classpath或系统属性 java.class.path指定路径下的类库")]),s._v(" "),n("li",[n("strong",[s._v("该类加载器是程序中默认的类加载器")]),s._v("，一般来说，java应用的类都是由它来完成加载")]),s._v(" "),n("li",[s._v("通过ClassLoader#getSystemClassLoader()方法可以获取到该类加载器")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec88cffd157f0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://img-blog.csdnimg.cn/20191207090719392.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RaODQ1MTk1NDg1,size_16,color_FFFFFF,t_70",alt:""}})]),s._v(" "),n("h3",{attrs:{id:"classloader的常用方法及获取方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#classloader的常用方法及获取方法"}},[s._v("#")]),s._v(" ClassLoader的常用方法及获取方法")]),s._v(" "),n("p",[s._v("ClassLoader类，它是一个抽象类，其后所有的类加载器都继承自ClassLoader（不包括启动类加载器）")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("方法名称")]),s._v(" "),n("th",[s._v("描述")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("getParent（）")]),s._v(" "),n("td",[s._v("返回该类加载器的超类加载器")])]),s._v(" "),n("tr",[n("td",[s._v("loadClass（String name）")]),s._v(" "),n("td",[s._v("加载名称为name的类，返回结果为java.lang.Class类的实例")])]),s._v(" "),n("tr",[n("td",[s._v("findClass（String name）")]),s._v(" "),n("td",[s._v("查找名称为name的类，返回结果为java.lang.Class类的实例")])]),s._v(" "),n("tr",[n("td",[s._v("findLoadedClass（String name）")]),s._v(" "),n("td",[s._v("查找名称为name的已经被加载过的类，返回结果为java.lang.Class类的实例")])]),s._v(" "),n("tr",[n("td",[s._v("defineClass（String name，byte[] b,int off,int len）")]),s._v(" "),n("td",[s._v("把字节数组b中的内容转换为一个Java类 ，返回结果为java.lang.Class类的实例")])]),s._v(" "),n("tr",[n("td",[s._v("resolveClass（Class<?> c）")]),s._v(" "),n("td",[s._v("连接指定的一个java类")])])])]),s._v(" "),n("h3",{attrs:{id:"测试获取加载器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试获取加载器"}},[s._v("#")]),s._v(" 测试获取加载器")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * ClassLoader加载\n */")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoaderTest")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取系统类加载器")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" systemClassLoader "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSystemClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("systemClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//sun.misc.Launcher$AppClassLoader@18b4aac2")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取其上层  扩展类加载器")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" extClassLoader "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" systemClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("extClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//sun.misc.Launcher$ExtClassLoader@610455d6")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取其上层 获取不到引导类加载器")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" bootStrapClassLoader "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" extClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bootStrapClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//null")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对于用户自定义类来说：使用系统类加载器进行加载")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" classLoader "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoaderTest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//sun.misc.Launcher$AppClassLoader@18b4aac2")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//String 类使用引导类加载器进行加载的  --\x3ejava核心类库都是使用引导类加载器加载的")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" classLoader1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classLoader1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//null")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h3",{attrs:{id:"用户自定义加载器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用户自定义加载器"}},[s._v("#")]),s._v(" 用户自定义加载器")]),s._v(" "),n("h4",{attrs:{id:"好处"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#好处"}},[s._v("#")]),s._v(" 好处")]),s._v(" "),n("div",{staticClass:"custom-block info"},[n("p",{staticClass:"custom-block-title"},[s._v("好处")]),s._v(" "),n("ul",[n("li",[s._v("隔离加载类")]),s._v(" "),n("li",[s._v("修改类加载的方式")]),s._v(" "),n("li",[s._v("拓展加载源")]),s._v(" "),n("li",[s._v("防止源码泄漏")])])]),s._v(" "),n("h4",{attrs:{id:"步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[s._v("#")]),s._v(" 步骤")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec89d3903bfb7?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),n("p",[s._v("在"),n("code",[s._v("findClass()")]),s._v("中调用"),n("code",[s._v("defineClass()")]),s._v("方法，它能将class二进制内容转换成Class对象，如果不符合要求会抛出各种异常。")]),s._v(" "),n("h3",{attrs:{id:"双亲委派机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制"}},[s._v("#")]),s._v(" 双亲委派机制")]),s._v(" "),n("h4",{attrs:{id:"原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),n("p",[s._v("Java虚拟机对class文件采用的是按需加载的方式，也就是说当需要使用该类时才会将她的class文件加载到内存生成的class对象。而且加载某个类的class文件时，java虚拟机采用的是双亲委派模式，即先把请求交由父类处理，它是一种任务委派模式")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec8cbbe16af0c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:""}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec8e47d7e861b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})]),s._v(" "),n("p",[s._v("如图，虽然我们自定义了一个java.lang包下的String尝试覆盖核心类库中的String，但是由于双亲委派机制，启动加载器会加载java核心类库的String类（BootStrap启动类加载器只加载包名为java、javax、sun等开头的类），而核心类库中的String并没有main方法")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec8d5358f0991?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})]),s._v(" "),n("h4",{attrs:{id:"优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优势"}},[s._v("#")]),s._v(" 优势")]),s._v(" "),n("ul",[n("li",[s._v("避免类的重复加载")]),s._v(" "),n("li",[s._v("保护程序安全，防止核心API被随意篡改")])]),s._v(" "),n("p",[s._v("例如")]),s._v(" "),n("ul",[n("li",[s._v("自定义类：java.lang.String")]),s._v(" "),n("li",[s._v("自定义类：java.lang.MeDsh（java.lang包需要访问权限，阻止我们用包名自定义类")])]),s._v(" "),n("p",[s._v("如图，虽然我们自定义了一个java.lang包下的String尝试覆盖核心类库中的String，但是由于双亲委派机制,启动加载器会加载java核心类库的String类(BootStrap启动类加载器只加载包名为java、javax、sun等开头的类),而核心类库中的String并没有main方法")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/18/170ec8ddb41c5559?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"classloader的传递性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#classloader的传递性"}},[s._v("#")]),s._v(" ClassLoader的传递性")]),s._v(" "),n("p",[s._v("程序在运行过程中，遇到了一个未知的类，它会选择哪个 ClassLoader 来加载它呢？虚拟机的策略是使用调用者 Class 对象的 ClassLoader 来加载当前未知的类。何为调用者 Class 对象？就是在遇到这个未知的类时，虚拟机肯定正在运行一个方法调用（静态方法或者实例方法），这个方法挂在哪个类上面，那这个类就是调用者 Class 对象。前面我们提到每个 Class 对象里面都有一个 classLoader 属性记录了当前的类是由谁来加载的。")]),s._v(" "),n("p",[s._v("因为 ClassLoader 的传递性，所有延迟加载的类都会由初始调用 main 方法的这个 ClassLoader 全全负责，它就是 AppClassLoader。")]),s._v(" "),n("h3",{attrs:{id:"线程上下文类加载器contextclassloader"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#线程上下文类加载器contextclassloader"}},[s._v("#")]),s._v(" 线程上下文类加载器ContextClassLoader")]),s._v(" "),n("p",[s._v("只是一个概念")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* The context ClassLoader for this thread */")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" contextClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setContextClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" cl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SecurityManager")]),s._v(" sm "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSecurityManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sm "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n           sm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkPermission")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RuntimePermission")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"setContextClassLoader"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n       contextClassLoader "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getContextClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("contextClassLoader "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SecurityManager")]),s._v(" sm "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSecurityManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sm "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n           "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ClassLoader")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkClassLoaderPermission")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("contextClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                                  "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Reflection")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getCallerClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" contextClassLoader"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("Contextclassloadel只是一个"),n("code",[s._v("成员变量")]),s._v("，通方法设置，通过"),n("code",[s._v("setContextCloassloader()")]),s._v("设置，通过"),n("code",[s._v("getContextCloassloader()")]),s._v("，他会自动检查调用的方法对应的加载器，通过ClassLoader的传递性。")]),s._v(" "),n("h3",{attrs:{id:"沙箱安全机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#沙箱安全机制"}},[s._v("#")]),s._v(" 沙箱安全机制")]),s._v(" "),n("p",[s._v("自定义String类，但是在加载自定义String类的时候先使用引导类加载器加载，而引导类加载器在加载过程中会先加载jdk自带的文件（rt.jar包中的java\\lang\\String.class）,报错信息说没有main方法就是因为加载的是rt.jar包中的String类。这样可以保证对java核心源代码的保护，这就是"),n("strong",[s._v("沙箱安全机制")]),s._v(".")]),s._v(" "),n("h2",{attrs:{id:"判断两个对象对应的类是否相等"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断两个对象对应的类是否相等"}},[s._v("#")]),s._v(" 判断两个对象对应的类是否相等")]),s._v(" "),n("p",[s._v("在jvm中表示两个class对象是否为同一个类存在的两个必要条件")]),s._v(" "),n("ul",[n("li",[s._v("类的完整类名必须一致，包括包名")]),s._v(" "),n("li",[s._v("加载这个类的ClassLoader（指ClassLoader实例对象）必须相同")])]),s._v(" "),n("p",[s._v("换句话说，在jvm中，即使这两个类对象（class对象）来源同一个Class文件，被同一个虚拟机所加载，但只要加载它们的"),n("code",[s._v("ClassLoader")]),s._v("实例对象不同，那么这两个类对象也是不相等的.")]),s._v(" "),n("h2",{attrs:{id:"类的主动使用和被动使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类的主动使用和被动使用"}},[s._v("#")]),s._v(" 类的主动使用和被动使用")]),s._v(" "),n("p",[n("strong",[s._v("java程序对类的使用方式分为：主动使用和被动使用")])]),s._v(" "),n("ul",[n("li",[s._v("主动使用，分为七种情况\n"),n("ul",[n("li",[s._v("创建类的实例")]),s._v(" "),n("li",[s._v("访问某各类或接口的静态变量，或者对静态变量赋值")]),s._v(" "),n("li",[s._v("调用类的静态方法")]),s._v(" "),n("li",[s._v("反射 比如Class.forName(com.dsh.jvm.xxx)")]),s._v(" "),n("li",[s._v("初始化一个类的子类")]),s._v(" "),n("li",[s._v("java虚拟机启动时被标明为启动类的类")]),s._v(" "),n("li",[s._v("JDK 7 开始提供的动态语言支持：\njava.lang.invoke.MethodHandle实例的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic句柄对应的类没有初始化，则初始化")])])]),s._v(" "),n("li",[s._v("除了以上七种情况，其他使用java类的方式都被看作是对类的被动使用，都不会导致类的初始化。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);