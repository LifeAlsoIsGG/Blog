(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{859:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),a("h3",{attrs:{id:"最长回文子串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最长回文子串"}},[t._v("#")]),t._v(" 最长回文子串")]),t._v(" "),a("p",[a("code",[t._v("动态规划")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*动态规划*/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("longestPalindrome2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" strLen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最长回文串的起点")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最长回文串的终点")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最长回文串的长度")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" maxLen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" dp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("strLen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("strLen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" strLen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    dp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" maxLen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        maxLen "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" l "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        maxStart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                        maxEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" maxEnd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br")])]),a("h3",{attrs:{id:"最长无重复子串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最长无重复子串"}},[t._v("#")]),t._v(" 最长无重复子串")]),t._v(" "),a("ul",[a("li",[t._v("判断一棵树是否是二叉树")]),t._v(" "),a("li",[t._v("leetcode25，链表中的节点每k个一组翻转")]),t._v(" "),a("li",[t._v("leetcode26")]),t._v(" "),a("li",[t._v("反转链表")]),t._v(" "),a("li",[t._v("翻转字符串（网址的翻转）")]),t._v(" "),a("li",[t._v("leetcode496")]),t._v(" "),a("li",[t._v("双向链表构建二叉树，构建平衡二叉树")]),t._v(" "),a("li",[t._v("编程题：链表向右移动K次")]),t._v(" "),a("li",[t._v("两个字符串最长公共子串")]),t._v(" "),a("li",[t._v("最长无重复子串")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/jump/super-jump/word?word=%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA",target:"_blank",rel:"noopener noreferrer"}},[t._v("买卖股票的最佳时机"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),a("h3",{attrs:{id:"分页和分段区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分页和分段区别"}},[t._v("#")]),t._v(" 分页和分段区别")]),t._v(" "),a("p",[a("strong",[t._v("1.目的")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("页是信息的物理单位，分页是为实现离散分配方式，以消减内存的外零头，提高内存的利用率。或者说，分页是出于系统管理的需要而不是用户需要。")])]),t._v(" "),a("li",[a("p",[t._v("段是信息的逻辑单位，它含有一组其意义相对完整的信息。分段的目的是为了更好地满足用户的需要。")])])]),t._v(" "),a("p",[a("strong",[t._v("2.长度")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("页的大小固定而且由系统决定，由系统把逻辑地址划分为页号和页内地址两部分，是由机器硬件实现的，因而在系统中只能有一种大小的页面。")])]),t._v(" "),a("li",[a("p",[t._v("段的长度不固定，决定于用户所编写的程序，通常由编译程序在对程序进行编译时，根据信息的性质来划分。")])])]),t._v(" "),a("p",[a("strong",[t._v("3.地址空间")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("页的地址空间是一维的，即单一的线形地址空间，程序员只要利用一个记忆符就可以表示一个地址。")])]),t._v(" "),a("li",[a("p",[t._v("段的作业地址空间是二维的，程序员在标识一个地址时，既需要给出段名，又需给出段内地址。")])])]),t._v(" "),a("p",[a("strong",[t._v("4.碎片")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("分页有内部碎片无外部碎片")])]),t._v(" "),a("li",[a("p",[t._v("分段有外部碎片无内部碎片")])])]),t._v(" "),a("p",[a("strong",[t._v("5.绝对地址")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("处理器使用页号和偏移量计算绝对地址")])]),t._v(" "),a("li",[a("p",[t._v("处理器使用段号和偏移量计算绝对地址")])])]),t._v(" "),a("p",[a("strong",[t._v("6.管理方式")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对于分页，操作系统必须为每个进程维护一个页表，以说明每个页对应的的页框。当进程运行时，它的所有页都必须在内存中，除非使用覆盖技术或虚拟技术，另外操作系统需要维护一个空闲页框列表。")])]),t._v(" "),a("li",[a("p",[t._v("对于分段，操作系统必须为每个进程维护一个段表，以说明每个段的加载地址和长度。当进程运行时，它的所有短都必须在内存中，除非使用覆盖技术或虚拟技术，另外操作系统需要维护一个内存中的空闲的空洞列表。")])]),t._v(" "),a("li",[a("p",[t._v("特别的，当使用虚拟技术是，把一页或一段写入内存时可能需要把一页或几个段写入磁盘。")])])]),t._v(" "),a("p",[a("strong",[t._v("7.共享和动态链接")])]),t._v(" "),a("ul",[a("li",[t._v("分页不容易实现，分段容易实现")])]),t._v(" "),a("h2",{attrs:{id:"计算机网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),a("h3",{attrs:{id:"应用层协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用层协议"}},[t._v("#")]),t._v(" 应用层协议")]),t._v(" "),a("p",[t._v("TCP支持的应用协议主要有：Telnet、FTP、SMTP等；")]),t._v(" "),a("p",[t._v("UDP支持的应用层协议主要有：NFS（网络文件系统）、SNMP（简单网络管理协议）、DNS（主域名称系统）、TFTP（通用文件传输协议）等。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019/7/%E4%B8%83%E5%B1%82%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%9B%BE.png",alt:"七层体系结构图"}})]),t._v(" "),a("h3",{attrs:{id:"osi七层模型和作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#osi七层模型和作用"}},[t._v("#")]),t._v(" OSI七层模型和作用")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("OSI七层模型")]),t._v(" "),a("th",[t._v("功能")]),t._v(" "),a("th",[t._v("对应的网络协议")]),t._v(" "),a("th",[t._v("TCP/IP四层概念模型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("应用层")]),t._v(" "),a("td",[t._v("文件传输，文件管理，电子邮件的信息处理——apdu")]),t._v(" "),a("td",[t._v("HTTP、TFTP, FTP, NFS, WAIS、SMTP")]),t._v(" "),a("td",[t._v("应用层")])]),t._v(" "),a("tr",[a("td",[t._v("表示层")]),t._v(" "),a("td",[t._v("确保一个系统的应用层发送的消息可以被另一个系统的应用层读取，编码转换，数据解析，管理数据的解密和加密，最小单位——ppdu")]),t._v(" "),a("td",[t._v("Telnet, Rlogin, SNMP, Gopher")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("会话层")]),t._v(" "),a("td",[t._v("负责在网络中的两节点建立，维持和终止通信，在一层协议中，可以解决节点连接的协调和管理问题。包括通信连接的建立，保持会话过程通信连接的畅通，两节点之间的对话，决定通信是否被终端一斤通信终端是决定从何处重新发送，最小单位——spdu")]),t._v(" "),a("td",[t._v("SMTP, DNS")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("传输层")]),t._v(" "),a("td",[t._v("定义一些传输数据的协议和端口。传输协议同时进行流量控制，或是根据接收方接收数据的快慢程度，规定适当的发送速率，解决传输效率及能力的问题——tpdu")]),t._v(" "),a("td",[t._v("TCP, UDP")]),t._v(" "),a("td",[t._v("传输层")])]),t._v(" "),a("tr",[a("td",[t._v("网络层")]),t._v(" "),a("td",[t._v("控制子网的运行，如逻辑编址，分组传输，路由选择最小单位——分组（包）报文")]),t._v(" "),a("td",[t._v("IP, ICMP, ARP, RARP, AKP, UUCP")]),t._v(" "),a("td",[t._v("网络层")])]),t._v(" "),a("tr",[a("td",[t._v("数据链路层")]),t._v(" "),a("td",[t._v("主要是对物理层传输的比特流包装，检测保证数据传输的可靠性，将物理层接收的数据进行MAC（媒体访问控制）地址的封装和解封装，也可以简单的理解为物理寻址。交换机就处在这一层，最小的传输单位——帧")]),t._v(" "),a("td",[t._v("FDDI, Ethernet, Arpanet, PDN, SLIP, PPP，STP。HDLC,SDLC,帧中继")]),t._v(" "),a("td",[t._v("数据链路层")])]),t._v(" "),a("tr",[a("td",[t._v("物理层")]),t._v(" "),a("td",[t._v("定义物理设备的标准，主要对物理连接方式，电气特性，机械特性等制定统一标准，传输比特流，因此最小的传输单位——位（比特流）")]),t._v(" "),a("td",[t._v("IEEE 802.1A, IEEE 802.2到IEEE 802.")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"tcp-http中的keep-alive机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-http中的keep-alive机制"}},[t._v("#")]),t._v(" TCP/HTTP中的keep-alive机制")]),t._v(" "),a("p",[t._v("https://blog.csdn.net/oceanperfect/article/details/51064574")]),t._v(" "),a("h3",{attrs:{id:"http请求包含哪些部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http请求包含哪些部分"}},[t._v("#")]),t._v(" HTTP请求包含哪些部分")]),t._v(" "),a("p",[t._v("http协议报文")]),t._v(" "),a("p",[t._v("1.请求报文(请求行/请求头/请求数据/空行)")]),t._v(" "),a("p",[t._v("​    请求行")]),t._v(" "),a("p",[t._v("​      求方法字段、URL字段和HTTP协议版本")]),t._v(" "),a("p",[t._v("​      例如：GET /index.html HTTP/1.1")]),t._v(" "),a("p",[t._v("​        get方法将数据拼接在url后面，传递参数受限")]),t._v(" "),a("p",[t._v("​      请求方法：")]),t._v(" "),a("p",[t._v("​        GET、POST、HEAD、PUT、DELETE、OPTIONS、TRACE、CONNECT")]),t._v(" "),a("p",[t._v("​    请求头(key value形式)")]),t._v(" "),a("p",[t._v("​      User-Agent：产生请求的浏览器类型。")]),t._v(" "),a("p",[t._v("​      Accept：客户端可识别的内容类型列表。")]),t._v(" "),a("p",[t._v("​      Host：主机地址")]),t._v(" "),a("p",[t._v("​    请求数据")]),t._v(" "),a("p",[t._v("​      post方法中，会把数据以key value形式发送请求")]),t._v(" "),a("p",[t._v("​    空行")]),t._v(" "),a("p",[t._v("​      发送回车符和换行符，通知服务器以下不再有请求头")]),t._v(" "),a("p",[t._v("2.响应报文(状态行、消息报头、响应正文)")]),t._v(" "),a("p",[t._v("​    状态行")]),t._v(" "),a("p",[t._v("​    消息报头")]),t._v(" "),a("p",[t._v("​    响应正文")]),t._v(" "),a("h3",{attrs:{id:"url重写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url重写"}},[t._v("#")]),t._v(" URL重写")]),t._v(" "),a("p",[t._v("如果浏览器不支持Cookie或用户阻止了所有Cookie，可以把会话ID附加在HTML页面中所有的URL上，这些页面作为响应发送给客户。这样，当用户单击URL时，会话ID被自动作为请求行的一部分而不是作为头行发送回服务器。这种方法称为URL重写(URL rewriting)。")]),t._v(" "),a("h3",{attrs:{id:"url输入地址栏后的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url输入地址栏后的流程"}},[t._v("#")]),t._v(" URL输入地址栏后的流程")]),t._v(" "),a("h3",{attrs:{id:"rip是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rip是什么"}},[t._v("#")]),t._v(" RIP是什么")]),t._v(" "),a("h2",{attrs:{id:"测试开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试开发"}},[t._v("#")]),t._v(" 测试开发")]),t._v(" "),a("h3",{attrs:{id:"编写测试用例有哪些方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写测试用例有哪些方法"}},[t._v("#")]),t._v(" 编写测试用例有哪些方法")]),t._v(" "),a("p",[t._v("1."),a("strong",[t._v("等价类划分")])]),t._v(" "),a("p",[t._v("等价类是指某个输入域的子集合.在该子集合中,各个输入数据对于揭露程序中的错误都是等效的.并合理地假定:测试某等价类的代表值就等于对这一类其它值的测试.因此,可以把全部输入数据合理划分为若干等价类,在每一个等价类中取一个数据作为测试的输入条件,就可以用少量代表性的测试数据.取得较好的测试结果.等价类划分可有两种不同的情况:有效等价类和无效等价类.")]),t._v(" "),a("p",[t._v("2."),a("strong",[t._v("边界值分析法")])]),t._v(" "),a("p",[t._v("边界值分析方法是对等价类划分方法的补充。大量的错误是发生在输入或输出范围的边界上,而不是发生在输入输出范围的内部.因此针对各种边界情况设计测试用例,可以查出更多的错误.")]),t._v(" "),a("p",[t._v("使用边界值分析方法设计测试用例,首先应确定边界情况.通常输入和输出等价类的边界,就是应着重测试的边界情况.应当选取正好等于,刚刚大于或刚刚小于边界的值作为测试数据,而不是选取等价类中的典型值或任意值作为测试数据")]),t._v(" "),a("p",[t._v("3."),a("strong",[t._v("错误推测法")])]),t._v(" "),a("p",[t._v("基于经验和直觉推测程序中所有可能存在的各种错误,从而有针对性的设计测试用例的方法.错误推测方法的基本思想:列举出程序中所有可能有的错误和容易发生错误的特殊情况,根据他们选择测试用例.例如,在单元测试时曾列出的许多在模块中常见的错误.以前产品测试中曾经发现的错误等,这些就是经验的总结。还有,输入数据和输出数据为0的情况。输入表格为空格或输入表格只有一行.这些都是容易发生错误的情况。可选择这些情况下的例子作为测试用例.")]),t._v(" "),a("p",[t._v("4."),a("strong",[t._v("因果图方法")])]),t._v(" "),a("p",[t._v("前面介绍的等价类划分方法和边界值分析方法,都是着重考虑输入条件,但未考虑输入条件之间的联系,相互组合等.考虑输入条件之间的相互组合,可能会产生一些新的情况.但要检查输入条件的组合不是一件容易的事情,即使把所有输入条件划分成等价类,他们之间的组合情况也相当多.因此必须考虑采用一种适合于描述对于多种条件的组合,相应产生多个动作的形式来考虑设计测试用例.这就需要利用因果图（逻辑模型）.因果图方法最终生成的就是判定表.它适合于检查程序输入条件的各种组合情况.")]),t._v(" "),a("p",[t._v("5."),a("strong",[t._v("正交表分析法")])]),t._v(" "),a("p",[t._v("有时候，可能因为大量的参数的组合而引起测试用例数量上的激增，同时，这些测试用例并没有明显的优先级上的差距，而测试人员又无法完成这么多数量的测试，就可以通过正交表来进行缩减一些用例，从而达到尽量少的用例覆盖尽量大的范围的可能性。")]),t._v(" "),a("p",[t._v("6."),a("strong",[t._v("场景分析方法")])]),t._v(" "),a("p",[t._v("指根据用户场景来模拟用户的操作步骤，这个比较类似因果图，但是可能执行的深度和可行性更好。")]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("h3",{attrs:{id:"cookie和session区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie和session区别"}},[t._v("#")]),t._v(" cookie和session区别")])])}),[],!1,null,null,null);s.default=r.exports}}]);