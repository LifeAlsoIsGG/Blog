(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{871:function(s,t,n){"use strict";n.r(t);var a=n(2),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境"}},[s._v("#")]),s._v(" 环境")]),s._v(" "),n("p",[n("code",[s._v("Centos7")])]),s._v(" "),n("h2",{attrs:{id:"使用树形结构展示文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用树形结构展示文件"}},[s._v("#")]),s._v(" 使用树形结构展示文件")]),s._v(" "),n("p",[s._v("下载"),n("code",[s._v("tree")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("yum "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" tree\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("使用")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@izuf6f489inattnq5zpfcxz ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tree --help")]),s._v("\nusage: tree "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-acdfghilnpqrstuvxACDFQNSUX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-H baseHREF"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-T title "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-L level "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-R"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-P pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-I pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-o filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--help"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--inodes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--device"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--noreport"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--nolinks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--dirsfirst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--charset charset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--filelimit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#] [--si] [--timefmt[=]<f>] [<directory list>]")]),s._v("\n  ------- Listing options -------\n  -a            All files are listed.\n  -d            List directories only.\n  -l            Follow symbolic links like directories.\n  -f            Print the full path prefix "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" each file.\n  -x            Stay on current filesystem only.\n  -L level      Descend only level directories deep.\n  -R            Rerun tree when max "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v(" level reached.\n  -P pattern    List only those files that match the pattern given.\n  -I pattern    Do not list files that match the given pattern.\n  --noreport    Turn off file/directory count at end of tree listing.\n  --charset X   Use charset X "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" terminal/HTML and indentation line output.\n  --filelimit "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Do not descend dirs with more than # files in them.")]),s._v("\n  --timefmt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Print and "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" according to the "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".\n  -o filename   Output to "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" instead of stdout.\n  --du          Print directory sizes.\n  --prune       Prune empty directories from the output.\n  -------- File options ---------\n  -q            Print non-printable characters as "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'?'")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n  -N            Print non-printable characters as is.\n  -Q            Quote filenames with double quotes.\n  -p            Print the protections "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" each file.\n  -u            Displays "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" owner or "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("UID")]),s._v(" number.\n  -g            Displays "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" group owner or GID number.\n  -s            Print the size "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" bytes of each file.\n  -h            Print the size "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" human readable way.\n  --si          Like -h, but use "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" SI "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("units")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("powers of "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -D            Print the "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" of last modification or "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" status change.\n  -F            Appends "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*'")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@'")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(" or "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'>'")]),s._v(" as per "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -F.\n  --inodes      Print inode number of each file.\n  --device      Print device ID number to "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" each "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" belongs.\n  ------- Sorting options -------\n  -v            Sort files alphanumerically by version.\n  -r            Sort files "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" reverse alphanumeric order.\n  -t            Sort files by last modification time.\n  -c            Sort files by last status change time.\n  -U            Leave files unsorted.\n  --dirsfirst   List directories before files "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-U disables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  ------- Graphics options ------\n  -i            Don't print indentation lines.\n  -A            Print ANSI lines graphic indentation lines.\n  -S            Print with ASCII graphics indentation lines.\n  -n            Turn colorization off always "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-C overrides"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n  -C            Turn colorization on always.\n  ------- XML/HTML options -------\n  -X            Prints out an XML representation of the tree.\n  -H baseHREF   Prints out HTML "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" with baseHREF as "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" directory.\n  -T string     Replace the default HTML title and H1 header with string.\n  --nolinks     Turn off hyperlinks "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" HTML output.\n  ---- Miscellaneous options ----\n  --version     Print version and exit.\n  --help        Print usage and this "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" message and exit.\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br")])]),n("p",[s._v("一般使用")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#显示第一层文件")]),s._v("\ntree -L "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" /var/lib/docker/\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("显示第一层")])])}),[],!1,null,null,null);t.default=e.exports}}]);